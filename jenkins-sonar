pipeline {
    agent any

    stages {

        stage('Test') {
            steps {
                echo 'Testing ...'
				bat "./mvnw test"
            }
        }

        stage('Code coverage') {
                	steps {
                	    echo 'Testing JaCoCo ..'
                        step([$class: 'JacocoPublisher',
                              execPattern: '**/**.exec',
                              classPattern: '**/classes',
                              sourcePattern: '**/src/main/java',
                              exclusionPattern: '**/src/test*'
                            ])
                	}
                }

        stage('Build') {
            steps {
                echo 'Building ...'
				bat "./mvnw -Dmaven.test.failure.ignore=true clean package"
            }
        }

		stage('Scan') {
            steps {
                echo 'SonarCube scanning ...'
				withSonarQubeEnv(installationName: 'sq1'){
				    //bat './mvnw clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar'
				    bat './mvnw clean package sonar:sonar'
				}
            }
        }
        stage ('Deploy'){
            steps {
                deploy adapters: [tomcat9(credentialsId: '2c81719d-8d36-4c41-95fe-5b5676f37a74',
                                        path: '', url: 'http://localhost:8080/')],
                        contextPath: 'module',
                        war: '**/*.war'
            }
        }
     //   stage ('Archive Artifacts'){
      //      steps {
      //          archiveArtifacts artifacts: 'target/*.war'
      //      }
      //  }
    }
}